#!/bin/sh

url='https://lambdalabs.com'
cookies="$HOME/.local/share/lambda/orders"
mkdir -p "$(dirname $cookies)"
touch $cookies

usage() {
	cat <<- "EOF"
	$0 login <username> <password>
	$0 search word[ word[ ...]]]
	EOF
}

action() {
	sed -En "/form/ s/.*action=\"([^\"]*)\".*/\1/p" $*
}

csrf() {
	sed -En "/name='csrfmiddlewaretoken'/ s/.*value='([^']*)'.*/\1/p" $*
}

login() {
	# Visit site once to extract CSRF and form "action" tag
	page=$(mktemp)
	curl --cookie-jar "$cookies" \
		-L "$url/tools/orders" \
		-o "$page" 2>/dev/null

	action=$(action $page)
	csrf=$(csrf $page)

	curl --cookie-jar "$cookies" \
		-H "cookie: csrftoken=$csrf" \
		-H 'referer: https://lambdalabs.com/e7f83f0e74ab48fd99743be3de4c527b/admin/login/?next=/tools/orders' \
		--data-urlencode "username=$1" \
		--data-urlencode "password=$2" \
		--data "csrfmiddlewaretoken=$csrf" \
		-L "$url$action"
}

search() {
	if [ ! -f $cookies ]; then
		cat 1>&2 <<- EOF
		$cookies file doesn't exist.
		Please log in via `$0 login`
		EOF

		exit 1
	fi

	curl --data-urlencode "search=$@" \
		--cookie "$cookies" \
		-G "$url/api/orders"
}

download() {
	curl -f --cookie "$cookies" \
		-G "$1" -o - 2> /dev/null
}

download_to_tmp() {
	if [ ! -d "$tmpdir" ] || [ -z "$tmpdir" ]; then
		tmpdir=$(mktemp -d)
	fi

	path="$tmpdir/$(basename $1)"

	download "$1" > "$path" || {
		echo "Failed to download $(basename "$out_file")" 1>&2
		return 1
	}

	echo $path
}

# Downloads order PDFs to /tmp/<name>.pdf
pdf_dl() {
	tmp=$(mktemp -d)
	for path in $(search $@ | jq -r '.data[].pdf_url' | tr -d \"); do
		download_to_tmp "$url$path"
	done
}

# Downloads buildsheet PDFs to /tmp/<name>.pdf
build_dl() {
	tmp=$(mktemp -d)
	for path in $(search $@ | jq -r '.data[].build_sheet_url' | tr -d \"); do
		download_to_tmp "$url$path"
	done
}

main() {
	case $1 in
		login)
			shift
			login "$1" "$2"
			;;
		search)
			shift
			search "$@"
			;;
		pdf)
			shift
			pdf_dl "$@"
			;;
		build)
			shift
			build_dl "$@"
			;;
		*)
			usage
			exit 1
			;;
	esac
}

main $@
