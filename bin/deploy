#!/bin/sh -ex

PREFIX=${PREFIX:-"$HOME/.local"}
SOURCE_DIR="$PREFIX/src"
PACKAGES="$PREFIX/var/packages"

# to be overridden by "overrides" 
CC=gcc
CFLAGS="-Wl,-rpath=$PREFIX/lib,-fPIC -I$PREFIX/include"
LDFLAGS="-L$PREFIX/lib"
NPROC=$(nproc)
export CC CFLAGS LDFLAGS LIBS PREFIX

prebuild() {
	if [ -r autogen.sh ]; then
		./autogen.sh
	fi
}

build() {
	# don't run configure if the Makefile already exists
	if [ -x configure ] && ([ ! -f Makefile ] || [ configure -nt Makefile ]); then
		./configure "CC=$CC" "CFLAGS=$CFLAGS" "LDFLAGS=$LDFLAGS" "LIBS=$LIBS" "--prefix=$PREFIX" $CONFIG_OPTS
	fi
}

package() {
	make install -j "$NPROC" "CC=$CC" "CFLAGS=$CFLAGS" "LDFLAGS=$LDFLAGS" "LIBS=$LIBS" "PREFIX=$PREFIX" $MAKE_OPTS
}

install() {
	src="$1"
	cd "$src" || {
		echo "$0: $src doesn't exist" 1>&2;
		# don't exit if "/var/packages/$pkg" doesn't exist
		return;
	}

	# source overrides for "{CONFIG,MAKE}_OPTS"
	overrides="$PACKAGES/$(basename "$src")/overrides"
	if [ -f "$overrides" ]; then
		. "$overrides"
	fi
	prebuild
	build
	package
}

# print packages in optimal order of compilation 
packages() {
	cd "$PACKAGES"
	for pkg in *; do
		if [ -f "$pkg/deps" ]; then
			# prepare input for tsort
			xargs -r printf "$pkg %s\n" < "$pkg/deps" 
		fi
	done | tsort - | tac
}

main() {
	cp -a "$PREFIX/etc/skel/." "$HOME"
	# compile & install executibles
	if [ $# -gt 0 ]; then
		realpath "$@" | while read src; do
			(install "$src")
		done
	else
		cd "$PREFIX/src"
		for src in $(packages); do
			(install "$src")
		done
	fi

	# crontab
	echo sourcing crontab 1>&2
	crontab "$HOME/.local/etc/crontab"
}

main "$@"
