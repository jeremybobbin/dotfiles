#!/bin/sh
tmp="$HOME/Downloads/"

handle() {
	case "$(file $1)" in
		*'ASCII text'*) terminal "$EDITOR" $1;;
		*'directory')   terminal "$FILE_BROWSER" $1;;
		*)              echo "don't know how to handle $1" 1>&2;;
	esac
}

for arg; do echo "$arg"; done | awk -v "tmp=$tmp" '
	/^(https?:\/\/)?(www\.)?(youtube.com\/watch\?|youtu\.be\/|bitchute\.com\/video)/ {
	                          printf "mpv --record-file=video-dump \"%s\"\n", $0; next }
	/^(ftps?|https?:)\/\// && /\.(gz|jpg|mkv|mov|mp[34]|webm|pdf|png|txt)(\?.*)?$/ {
		                  printf "wget -P %s \"%s\"\n", tmp, $0;  sub(/.*\//, tmp) }
	/\.gz$/                 { printf "gunzip \"%s\"\n", $0;           sub(/\.gz$/, "") }
	/\.tar$/                { printf "tar xf \"%s\"\n", $0;          sub(/\.tar$/, "") }
	/^https?:\/\/|\.html?$/ { printf "surf \"%s\"\n", $0;                         next }
	/\.(jpe?g|png)$/        { printf "sxiv \"%s\"\n", $0;                         next }
	/\.(mkv|mov|mp[34]|webm)$/   { printf "mpv \"%s\"\n", $0;                          next }
	/\.pdf$/                { printf "mupdf \"%s\"\n", $0;                        next }
	/\.(txt|log)$/          { printf "e \"%s\"\n", $0;                            next }
				{ printf "handle \"%s\"\n", $0;                       next }
' | while read cmd; do eval "$cmd"; done
#TODO(?): merge lines where programs take multiple args
